// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package config

import (
	"github.com/google/wire"
	"go-scrapper/repositories"
	"go-scrapper/services"
)

// Injectors from injector.go:

func Init() *Initialization {
	gormDB := ConnectToDB()
	bookmarkRepositoryImpl := repositories.BookmarkRepositoryInit(gormDB)
	userRepositoryImpl := repositories.UserRepositoryInit(gormDB)
	worksRepositoryImpl := repositories.WorksRepositoryInit(gormDB)
	bookmarkingServiceImpl := services.BookmarkingServiceInit(bookmarkRepositoryImpl, worksRepositoryImpl, userRepositoryImpl)
	initialization := NewInitialization(bookmarkRepositoryImpl, userRepositoryImpl, worksRepositoryImpl, bookmarkingServiceImpl)
	return initialization
}

// injector.go:

var db = wire.NewSet(ConnectToDB)

var bookmarksRepositorySet = wire.NewSet(repositories.BookmarkRepositoryInit, wire.Bind(new(repositories.BookmarkRepository), new(*repositories.BookmarkRepositoryImpl)))

var usersRepositorySet = wire.NewSet(repositories.UserRepositoryInit, wire.Bind(new(repositories.UserRepository), new(*repositories.UserRepositoryImpl)))

var worksRepositorySet = wire.NewSet(repositories.WorksRepositoryInit, wire.Bind(new(repositories.WorksRepository), new(*repositories.WorksRepositoryImpl)))

var bookmarkServiceSet = wire.NewSet(services.BookmarkingServiceInit, wire.Bind(new(services.BookmarkingService), new(*services.BookmarkingServiceImpl)))
